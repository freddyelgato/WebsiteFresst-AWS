name: Deploy Services on AWS QA

on:
  push:
    branches:
      - test1
jobs:
  push_to_registry:
    name: Push Docker Images to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push on Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/databases/Products
          file: ./BackEnd/databases/Products/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/products-db:latest

      - name: Executing remote ssh on EC2 server
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.DNS_PRODUCTS_DB }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
              sudo docker stop products-db || echo "No existing process found"
              sudo docker rm products-db || echo "No existing process found"
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/products-db:latest
              sudo docker run -d -p 27017:27017 --name products-db \
                -e MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_ROOT_USERNAME }} \
                -e MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_ROOT_PASSWORD }} \
                ${{ secrets.DOCKER_USERNAME }}/products-db
            

      - name: Build and push on Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Product/Product_Search(ApiRest)
          file: ./BackEnd/Domains/Product/Product_Search(ApiRest)/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/get-product:latest

      - name: Executing remote ssh on EC2 server
        uses: appleboy/ssh-action@master
        with:
            host: ${{ secrets.DNS_GET_PRODUCT }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
              sudo docker stop get-product || echo "No existing process found"
              sudo docker rm get-product || echo "No existing process found"
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/get-product:latest
              sudo docker run -d -p 80:4003 --name get-product \
                -e MONGO_URI=mongodb://52.90.249.249:27017 \
                ${{ secrets.DOCKER_USERNAME }}/get-product